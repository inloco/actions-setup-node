name: 'Setup Node.js environment'
description: 'Setup a Node.js environment by adding problem matchers and optionally downloading and adding it to the PATH'
author: 'In Loco'
inputs:
  always-auth:
    description: 'Set always-auth in npmrc'
  node-version:
    description: 'Version Spec of the version to use.  Examples: 12.x, 10.15.1, >=10.15.0'
  check-latest:
    description: 'Set this option if you want the action to check for the latest available version that satisfies the version spec'
  registry-url:
    description: 'Optional registry to set up for auth. Will set the registry in a project level .npmrc and .yarnrc file, and set up auth to read in from env.NODE_AUTH_TOKEN'
  scope:
    description: 'Optional scope for authenticating against scoped registries'
  token:
    description: Used to pull node distributions from node-versions.  Since there's a default, this is typically not supplied by the user.
  cache-url:
    description: 'A value for ACTIONS_CACHE_URL environment variable'
  runtime-url:
    description: 'A value for ACTIONS_RUNTIME_URL environment variable'
  runtime-token:
    description: 'A value for ACTIONS_RUNTIME_TOKEN environment variable'
runs:
  using: composite
  steps: 
    - name: Set up node
      uses: actions/setup-node@v1
      with:
        always-auth: ${{ inputs.always-auth }}
        node-version: ${{ inputs.node-version }}
        check-latest: ${{ inputs.check-latest }}
        registry-url: ${{ inputs.registry-url }}
        scope: ${{ inputs.scope }}
        token: ${{ inputs.token }}
    - name: Set up npm
      id: npm
      run: |
        npm config set prefix ${HOME}/.npm-global
        echo "::add-path::$(npm bin -g)"
        echo "::set-output name=cache-dir::$(npm config get cache)"
    - name: Cache npm
      uses: inloco/actions-cache@HEAD
      with:
        cache-url: ${{ inputs.cache-url }}
        runtime-url: ${{ inputs.runtime-url }}
        runtime-token: ${{ inputs.runtime-token }}
        path: ${{ steps.npm.outputs.cache-dir }}
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: ${{ runner.os }}-node-
    - name: Set up yarn
      id: yarn
      run: |
        npm install -g yarn
        echo "::add-path::$(yarn global bin)"
        echo "::set-output name=cache-dir::$(yarn cache dir)"
    - name: Cache yarn
      uses: inloco/actions-cache@HEAD
      with:
        cache-url: ${{ inputs.cache-url }}
        runtime-url: ${{ inputs.runtime-url }}
        runtime-token: ${{ inputs.runtime-token }}
        path: ${{ steps.yarn.outputs.cache-dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: ${{ runner.os }}-yarn-
